# Generated by Django 5.2.3 on 2025-08-05 11:55

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyWorkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_date', models.DateField(verbose_name='운동 날짜')),
                ('total_duration', models.DurationField(blank=True, help_text='예: 00:47:01', null=True, verbose_name='총 운동시간')),
                ('total_calories', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='총 소모 칼로리')),
                ('is_completed', models.BooleanField(default=False, verbose_name='운동 완료 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_workouts', to='members.member', verbose_name='회원')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_workouts', to='members.trainer', verbose_name='트레이너')),
            ],
            options={
                'verbose_name': '일일 운동',
                'verbose_name_plural': '일일 운동들',
                'ordering': ['-workout_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_name', models.CharField(max_length=100, verbose_name='운동명')),
                ('body_part', models.CharField(choices=[('가슴', '가슴'), ('등', '등'), ('어깨', '어깨'), ('이두', '이두'), ('삼두', '삼두'), ('복근', '복근'), ('대퇴사두', '대퇴사두'), ('햄스트링', '햄스트링'), ('둔근', '둔근'), ('종아리', '종아리'), ('전완', '전완'), ('승모', '승모')], max_length=50, verbose_name='운동 부위')),
                ('equipment', models.CharField(choices=[('맨몸', '맨몸'), ('덤벨', '덤벨'), ('바벨', '바벨'), ('머신', '머신'), ('케이블', '케이블'), ('스미스 머신', '스미스 머신'), ('밴드', '밴드'), ('스트레칭', '스트레칭'), ('유산소', '유산소')], max_length=50, verbose_name='운동 도구')),
                ('input_type', models.CharField(choices=[('Drop down type 01', 'Drop down type 01'), ('Drop down type 02', 'Drop down type 02'), ('Drop down type 03', 'Drop down type 03'), ('Drop down type 04', 'Drop down type 04'), ('Drop down type 05', 'Drop down type 05')], default='Drop down type 05', max_length=50, verbose_name='입력 타입')),
                ('measurement_unit', models.CharField(choices=[('회', '회'), ('분', '분'), ('초', '초'), ('km', 'km'), ('m', 'm'), ('세트', '세트')], default='회', max_length=20, verbose_name='측정 단위')),
                ('weight_unit', models.CharField(choices=[('none', '없음'), ('kg', 'kg'), ('lb', 'lb')], default='none', max_length=10, verbose_name='중량 단위')),
                ('met_value', models.DecimalField(decimal_places=1, default=Decimal('6.0'), help_text='칼로리 계산용 MET 값 (1.0-20.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('1.0')), django.core.validators.MaxValueValidator(Decimal('20.0'))], verbose_name='MET 값')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
            ],
            options={
                'verbose_name': '운동',
                'verbose_name_plural': '운동들',
                'ordering': ['body_part', 'exercise_name'],
                'indexes': [models.Index(fields=['body_part', 'is_active'], name='workouts_ex_body_pa_2a3953_idx'), models.Index(fields=['equipment'], name='workouts_ex_equipme_727db8_idx')],
            },
        ),
        migrations.CreateModel(
            name='WorkoutExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveIntegerField(help_text='1, 2, 3... (화면에서 01, 02, 03으로 표시)', verbose_name='운동 순서')),
                ('total_sets', models.PositiveIntegerField(default=0, verbose_name='총 세트 수')),
                ('total_duration', models.DurationField(blank=True, null=True, verbose_name='해당 운동 총 시간')),
                ('total_calories', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='해당 운동 총 칼로리')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('daily_workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_exercises', to='workouts.dailyworkout', verbose_name='일일 운동')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_exercises', to='workouts.exercise', verbose_name='운동')),
            ],
            options={
                'verbose_name': '운동 항목',
                'verbose_name_plural': '운동 항목들',
                'ordering': ['daily_workout', 'order_number'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.PositiveIntegerField(verbose_name='세트 번호')),
                ('repetitions', models.PositiveIntegerField(help_text='예: 15회', verbose_name='횟수')),
                ('weight_kg', models.DecimalField(decimal_places=2, help_text='예: 24.00kg', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='중량(kg)')),
                ('duration', models.DurationField(help_text='예: 00:04:22', verbose_name='세트별 소요시간')),
                ('calories', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='세트별 칼로리')),
                ('completed_at', models.DateTimeField(auto_now_add=True, verbose_name='세트 완료 시간')),
                ('workout_exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_sets', to='workouts.workoutexercise', verbose_name='운동 항목')),
            ],
            options={
                'verbose_name': '운동 세트',
                'verbose_name_plural': '운동 세트들',
                'ordering': ['workout_exercise', 'set_number'],
            },
        ),
        migrations.AddIndex(
            model_name='dailyworkout',
            index=models.Index(fields=['member', 'workout_date'], name='workouts_da_member__e56309_idx'),
        ),
        migrations.AddIndex(
            model_name='dailyworkout',
            index=models.Index(fields=['trainer'], name='workouts_da_trainer_4c5cf9_idx'),
        ),
        migrations.AddIndex(
            model_name='dailyworkout',
            index=models.Index(fields=['is_completed'], name='workouts_da_is_comp_ec5bf9_idx'),
        ),
        migrations.AddConstraint(
            model_name='dailyworkout',
            constraint=models.UniqueConstraint(fields=('member', 'workout_date'), name='unique_member_workout_date'),
        ),
        migrations.AddIndex(
            model_name='workoutexercise',
            index=models.Index(fields=['daily_workout', 'order_number'], name='workouts_wo_daily_w_de9378_idx'),
        ),
        migrations.AddConstraint(
            model_name='workoutexercise',
            constraint=models.UniqueConstraint(fields=('daily_workout', 'order_number'), name='unique_workout_order'),
        ),
        migrations.AddIndex(
            model_name='exerciseset',
            index=models.Index(fields=['workout_exercise', 'set_number'], name='workouts_ex_workout_fbfc4e_idx'),
        ),
        migrations.AddConstraint(
            model_name='exerciseset',
            constraint=models.UniqueConstraint(fields=('workout_exercise', 'set_number'), name='unique_exercise_set_number'),
        ),
    ]
